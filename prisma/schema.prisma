// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model Category {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  title  String
  slug   String @unique
  description  String?
  imageUrl String?
  status    String @default("ACTIVE")

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  products Product[]
}

model Brand {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  imageUrl  String
  slug      String @unique
  status    String @default("ACTIVE")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Unit {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  abbreviation String  // Perbaiki ejaan dari "abrreviation" menjadi "abbreviation"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products Product[]
}

model Warehouse {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  slug      String @unique
  country   String
  state     String
  city      String
  phone     String
  contactPerson     String
  email     String
  zipCode   String
  status    String @default("ACTIVE")
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  products  WarehouseProduct[]
}

model Supplier {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  imageUrl    String
  companyName String
  vatNumber   String
  email       String @unique
  phone       String
  address     String
  city        String
  state       String
  postalCode  String
  country     String
  status    String @default("ACTIVE")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products Product[]
}


model Product {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  slug           String @unique
  productCode    String
  stockQty       Int
  supplierId     String @db.ObjectId
  brandId        String @db.ObjectId
  categoryId     String @db.ObjectId
  unitId         String @db.ObjectId
  productCost    Float
  productPrice   Float
  alertQty       Int
  productTax     Float
  taxMethod      String
  productImages  String[]
  productDetails String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  warehouses     WarehouseProduct[]
  supplier       Supplier  @relation(fields: [supplierId], references: [id])
  brand          Brand     @relation(fields: [brandId], references: [id])
  category       Category  @relation(fields: [categoryId], references: [id])
  unit           Unit      @relation(fields: [unitId], references: [id])
}

model WarehouseProduct {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  warehouseId  String    @db.ObjectId
  productId    String    @db.ObjectId
  warehouse    Warehouse @relation(fields: [warehouseId], references: [id])
  product      Product   @relation(fields: [productId], references: [id])

  @@index([warehouseId, productId], name: "warehouse_product_idx")
}